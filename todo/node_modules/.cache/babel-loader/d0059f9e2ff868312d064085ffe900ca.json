{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: [{\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Doe\",\n    email: \"johndoe@gmail.com\",\n    age: 27\n  }, {\n    id: 2,\n    firstName: \"Lech\",\n    lastName: \"Nowak\",\n    email: \"nowaklech@gmail.com\",\n    age: 25\n  }, {\n    id: 3,\n    firstName: \"Jan\",\n    lastName: \"Kowalski\",\n    email: \"jankowalski@gmail.com\",\n    age: 43\n  }],\n  reducers: {\n    addUser: (state, action) => {\n      const newUser = action.payload;\n      state.push(newUser);\n    },\n    deleteUser: (state, action) => {\n      return state.filter(user => action.payload !== state.indexOf(user));\n    },\n    editUser: (state, action) => {\n      const newUser = immer.produce(state, draftState => {\n        draftState[action].name = 'Jon Doe';\n        draftState[0].address.city = 'Paris'; //nested update similar to mutable way\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  editUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","id","firstName","lastName","email","age","reducers","addUser","state","action","newUser","payload","push","deleteUser","filter","user","indexOf","editUser","immer","produce","draftState","address","city","actions","reducer"],"sources":["C:/Users/mjaro/Programming/React/todo/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: [\r\n    {\r\n      id: 1,\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"johndoe@gmail.com\",\r\n      age: 27,\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"Lech\",\r\n      lastName: \"Nowak\",\r\n      email: \"nowaklech@gmail.com\",\r\n      age: 25,\r\n    },\r\n    {\r\n      id: 3,\r\n      firstName: \"Jan\",\r\n      lastName: \"Kowalski\",\r\n      email: \"jankowalski@gmail.com\",\r\n      age: 43,\r\n    },\r\n  ],\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      const newUser = action.payload;\r\n      state.push(newUser);\r\n    },\r\n    deleteUser: (state, action) => {\r\n        return state.filter((user) => action.payload !== state.indexOf(user))\r\n    },\r\n    editUser: (state, action) => {\r\n        const newUser = immer.produce(state, draftState => {\r\n            draftState[action].name = 'Jon Doe'\r\n            draftState[0].address.city = 'Paris'\r\n            //nested update similar to mutable way\r\n          })\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const { addUser, deleteUser, editUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OADsB;EAE5BC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,MAFb;IAGEC,QAAQ,EAAE,KAHZ;IAIEC,KAAK,EAAE,mBAJT;IAKEC,GAAG,EAAE;EALP,CADY,EAQZ;IACEJ,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,MAFb;IAGEC,QAAQ,EAAE,OAHZ;IAIEC,KAAK,EAAE,qBAJT;IAKEC,GAAG,EAAE;EALP,CARY,EAeZ;IACEJ,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,KAFb;IAGEC,QAAQ,EAAE,UAHZ;IAIEC,KAAK,EAAE,uBAJT;IAKEC,GAAG,EAAE;EALP,CAfY,CAFc;EAyB5BC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACAH,KAAK,CAACI,IAAN,CAAWF,OAAX;IACD,CAJO;IAKRG,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC3B,OAAOD,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUN,MAAM,CAACE,OAAP,KAAmBH,KAAK,CAACQ,OAAN,CAAcD,IAAd,CAA1C,CAAP;IACH,CAPO;IAQRE,QAAQ,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;MACzB,MAAMC,OAAO,GAAGQ,KAAK,CAACC,OAAN,CAAcX,KAAd,EAAqBY,UAAU,IAAI;QAC/CA,UAAU,CAACX,MAAD,CAAV,CAAmBV,IAAnB,GAA0B,SAA1B;QACAqB,UAAU,CAAC,CAAD,CAAV,CAAcC,OAAd,CAAsBC,IAAtB,GAA6B,OAA7B,CAF+C,CAG/C;MACD,CAJa,CAAhB;IAKH;EAdO;AAzBkB,CAAD,CAA7B;AA4CA,OAAO,MAAM;EAAEf,OAAF;EAAWM,UAAX;EAAuBI;AAAvB,IAAoCnB,SAAS,CAACyB,OAApD;AACP,eAAezB,SAAS,CAAC0B,OAAzB"},"metadata":{},"sourceType":"module"}