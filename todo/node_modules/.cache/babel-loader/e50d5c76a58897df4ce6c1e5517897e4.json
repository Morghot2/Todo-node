{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjaro\\\\Programming\\\\React\\\\todo\\\\src\\\\components\\\\ModifyButton.js\";\nimport React from \"react\"; // import Stack from \"@mui/material/Stack\";\n\nimport Button from \"@mui/material/Button\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModifyButton = _ref => {\n  let {\n    handleShow,\n    action,\n    handleButtonType\n  } = _ref;\n\n  const handleButtonClick = () => {\n    handleShow();\n    handleButtonType(action);\n  };\n\n  if (action === \"new\") {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleButtonType,\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  } else if (action === \"edit\") {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"warning\",\n      onClick: handleButtonClick,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = ModifyButton;\nexport default ModifyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyButton\");","map":{"version":3,"names":["React","Button","EditIcon","ModifyButton","handleShow","action","handleButtonType","handleButtonClick"],"sources":["C:/Users/mjaro/Programming/React/todo/src/components/ModifyButton.js"],"sourcesContent":["import React from \"react\";\r\n\r\n// import Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst ModifyButton = ({ handleShow, action, handleButtonType }) => {\r\n\r\n  const handleButtonClick = () => {\r\n    handleShow()\r\n    handleButtonType(action)\r\n  }\r\n  \r\n\r\n  if (action === \"new\") {\r\n    return (\r\n      <Button variant=\"contained\" onClick={handleButtonType}>\r\n        New\r\n      </Button>\r\n    );\r\n  } else if (action === \"edit\") {\r\n    return (\r\n      <Button variant=\"contained\" color=\"warning\" onClick={handleButtonClick}>\r\n        <EditIcon />\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ModifyButton;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,YAAY,GAAG,QAA8C;EAAA,IAA7C;IAAEC,UAAF;IAAcC,MAAd;IAAsBC;EAAtB,CAA6C;;EAEjE,MAAMC,iBAAiB,GAAG,MAAM;IAC9BH,UAAU;IACVE,gBAAgB,CAACD,MAAD,CAAhB;EACD,CAHD;;EAMA,IAAIA,MAAM,KAAK,KAAf,EAAsB;IACpB,oBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,OAAO,EAAEC,gBAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND,MAMO,IAAID,MAAM,KAAK,MAAf,EAAuB;IAC5B,oBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,KAAK,EAAC,SAAlC;MAA4C,OAAO,EAAEE,iBAArD;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;AACF,CArBD;;KAAMJ,Y;AAuBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}