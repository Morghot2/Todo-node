{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport produce from \"immer\";\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: [{\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Doe\",\n    email: \"johndoe@gmail.com\",\n    age: 27\n  }, {\n    id: 2,\n    firstName: \"Lech\",\n    lastName: \"Nowak\",\n    email: \"nowaklech@gmail.com\",\n    age: 25\n  }, {\n    id: 3,\n    firstName: \"Jan\",\n    lastName: \"Kowalski\",\n    email: \"jankowalski@gmail.com\",\n    age: 43\n  }],\n  reducers: {\n    addUser: (state, action) => {\n      const newUser = action.payload;\n      state.push(newUser);\n    },\n    deleteUser: (state, action) => {\n      return state.filter(user => action.payload !== state.indexOf(user));\n    },\n    editUser: (state, action) => {\n      return produce(state, draftState => {\n        draftState[action.payload.currentsUser] = action.payload.userValues;\n      });\n    }\n  }\n});\nexport const {\n  addUser,\n  deleteUser,\n  editUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","produce","userSlice","name","initialState","id","firstName","lastName","email","age","reducers","addUser","state","action","newUser","payload","push","deleteUser","filter","user","indexOf","editUser","draftState","currentsUser","userValues","actions","reducer"],"sources":["C:/Users/mjaro/Programming/React/todo/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport produce from \"immer\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n\r\n  initialState: [\r\n    {\r\n      id: 1,\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      email: \"johndoe@gmail.com\",\r\n      age: 27,\r\n    },\r\n    {\r\n      id: 2,\r\n      firstName: \"Lech\",\r\n      lastName: \"Nowak\",\r\n      email: \"nowaklech@gmail.com\",\r\n      age: 25,\r\n    },\r\n    {\r\n      id: 3,\r\n      firstName: \"Jan\",\r\n      lastName: \"Kowalski\",\r\n      email: \"jankowalski@gmail.com\",\r\n      age: 43,\r\n    },\r\n  ],\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      const newUser = action.payload;\r\n      state.push(newUser);\r\n    },\r\n    deleteUser: (state, action) => {\r\n      return state.filter((user) => action.payload !== state.indexOf(user));\r\n    },\r\n    editUser: (state, action) => {\r\n      return produce(state, (draftState) => {\r\n        draftState[action.payload.currentsUser] = action.payload.userValues;\r\n      });\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const { addUser, deleteUser, editUser } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,OADsB;EAG5BC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,MAFb;IAGEC,QAAQ,EAAE,KAHZ;IAIEC,KAAK,EAAE,mBAJT;IAKEC,GAAG,EAAE;EALP,CADY,EAQZ;IACEJ,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,MAFb;IAGEC,QAAQ,EAAE,OAHZ;IAIEC,KAAK,EAAE,qBAJT;IAKEC,GAAG,EAAE;EALP,CARY,EAeZ;IACEJ,EAAE,EAAE,CADN;IAEEC,SAAS,EAAE,KAFb;IAGEC,QAAQ,EAAE,UAHZ;IAIEC,KAAK,EAAE,uBAJT;IAKEC,GAAG,EAAE;EALP,CAfY,CAHc;EA0B5BC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACAH,KAAK,CAACI,IAAN,CAAWF,OAAX;IACD,CAJO;IAKRG,UAAU,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC7B,OAAOD,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUN,MAAM,CAACE,OAAP,KAAmBH,KAAK,CAACQ,OAAN,CAAcD,IAAd,CAA1C,CAAP;IACD,CAPO;IAQRE,QAAQ,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;MAC3B,OAAOZ,OAAO,CAACW,KAAD,EAASU,UAAD,IAAgB;QACpCA,UAAU,CAACT,MAAM,CAACE,OAAP,CAAeQ,YAAhB,CAAV,GAA0CV,MAAM,CAACE,OAAP,CAAeS,UAAzD;MACD,CAFa,CAAd;IAGD;EAZO;AA1BkB,CAAD,CAA7B;AA2CA,OAAO,MAAM;EAAEb,OAAF;EAAWM,UAAX;EAAuBI;AAAvB,IAAoCnB,SAAS,CAACuB,OAApD;AACP,eAAevB,SAAS,CAACwB,OAAzB"},"metadata":{},"sourceType":"module"}