{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjaro\\\\Programming\\\\React\\\\todo\\\\src\\\\components\\\\ActionButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { UserContext } from \"./App\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActionButton = _ref => {\n  _s();\n\n  let {\n    position,\n    action,\n    userValues\n  } = _ref;\n  const {\n    buttonType,\n    handleShow,\n    currentUser,\n    userList\n  } = useContext(UserContext);\n  const [usersList, setUsersList] = userList;\n  const [buttonsType, setButtonsType] = buttonType;\n  const [currentsUser, setCurrentsUser] = currentUser;\n  let buttonProperties = {\n    text: \"\"\n  };\n  buttonsType === \"new\" ? text = \"Add\" : text = \"Update\";\n\n  if (action === \"delete\") {\n    text = /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  } else if (buttonsType === \"edit\") {\n    text = \"Update\";\n  } else {\n    text = \"Add\";\n  }\n\n  const handleUser = () => {\n    if (action === \"delete\") {\n      setUsersList(usersList.filter(user => position !== usersList.indexOf(user)));\n    } else if (buttonsType === \"new\") {\n      setUsersList([...usersList, userValues]);\n      handleShow();\n    } else if (buttonsType === \"edit\") {\n      const updateUser = [...usersList];\n      updateUser[currentsUser] = userValues;\n      setUsersList([...updateUser]);\n      handleShow();\n    }\n\n    console.log(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"error\",\n    onClick: handleUser,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActionButton, \"JaK1VnDqxRI8A46pVWvTXShlAKE=\");\n\n_c = ActionButton;\nexport default ActionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionButton\");","map":{"version":3,"names":["React","useState","useContext","UserContext","Button","DeleteIcon","ActionButton","position","action","userValues","buttonType","handleShow","currentUser","userList","usersList","setUsersList","buttonsType","setButtonsType","currentsUser","setCurrentsUser","buttonProperties","text","handleUser","filter","user","indexOf","updateUser","console","log"],"sources":["C:/Users/mjaro/Programming/React/todo/src/components/ActionButton.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { UserContext } from \"./App\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst ActionButton = ({ position, action, userValues }) => {\r\n  const { buttonType, handleShow, currentUser, userList } =\r\n    useContext(UserContext);\r\n  const [usersList, setUsersList] = userList;\r\n  const [buttonsType, setButtonsType] = buttonType;\r\n  const [currentsUser, setCurrentsUser] = currentUser;\r\n\r\n  let buttonProperties = {text: \"\"};\r\n\r\n  buttonsType === \"new\" ? (text = \"Add\") : (text = \"Update\");\r\n\r\n  if (action === \"delete\") {\r\n    text = <DeleteIcon />\r\n  } else if (buttonsType === \"edit\") {\r\n    text = \"Update\"\r\n  } else {\r\n    text = \"Add\"\r\n  }\r\n\r\n  const handleUser = () => {\r\n    if (action === \"delete\") {\r\n      setUsersList(\r\n        usersList.filter((user) => position !== usersList.indexOf(user))\r\n      );\r\n    } else if (buttonsType === \"new\") {\r\n      setUsersList([...usersList, userValues]);\r\n      handleShow();\r\n    } else if (buttonsType === \"edit\") {\r\n      const updateUser = [...usersList];\r\n      updateUser[currentsUser] = userValues;\r\n\r\n      setUsersList([...updateUser]);\r\n      handleShow();\r\n    }\r\n\r\n    console.log(text);\r\n  };\r\n\r\n  return (\r\n    <Button variant=\"contained\" color={\"error\"} onClick={handleUser}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ActionButton;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AAEA,MAAMC,YAAY,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC;EAApB,CAAqC;EACzD,MAAM;IAAEC,UAAF;IAAcC,UAAd;IAA0BC,WAA1B;IAAuCC;EAAvC,IACJX,UAAU,CAACC,WAAD,CADZ;EAEA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BF,QAAlC;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,UAAtC;EACA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCP,WAAxC;EAEA,IAAIQ,gBAAgB,GAAG;IAACC,IAAI,EAAE;EAAP,CAAvB;EAEAL,WAAW,KAAK,KAAhB,GAAyBK,IAAI,GAAG,KAAhC,GAA0CA,IAAI,GAAG,QAAjD;;EAEA,IAAIb,MAAM,KAAK,QAAf,EAAyB;IACvBa,IAAI,gBAAG,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO,IAAIL,WAAW,KAAK,MAApB,EAA4B;IACjCK,IAAI,GAAG,QAAP;EACD,CAFM,MAEA;IACLA,IAAI,GAAG,KAAP;EACD;;EAED,MAAMC,UAAU,GAAG,MAAM;IACvB,IAAId,MAAM,KAAK,QAAf,EAAyB;MACvBO,YAAY,CACVD,SAAS,CAACS,MAAV,CAAkBC,IAAD,IAAUjB,QAAQ,KAAKO,SAAS,CAACW,OAAV,CAAkBD,IAAlB,CAAxC,CADU,CAAZ;IAGD,CAJD,MAIO,IAAIR,WAAW,KAAK,KAApB,EAA2B;MAChCD,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeL,UAAf,CAAD,CAAZ;MACAE,UAAU;IACX,CAHM,MAGA,IAAIK,WAAW,KAAK,MAApB,EAA4B;MACjC,MAAMU,UAAU,GAAG,CAAC,GAAGZ,SAAJ,CAAnB;MACAY,UAAU,CAACR,YAAD,CAAV,GAA2BT,UAA3B;MAEAM,YAAY,CAAC,CAAC,GAAGW,UAAJ,CAAD,CAAZ;MACAf,UAAU;IACX;;IAEDgB,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACD,CAjBD;;EAmBA,oBACE,QAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,KAAK,EAAE,OAAnC;IAA4C,OAAO,EAAEC,UAArD;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3CD;;GAAMf,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}