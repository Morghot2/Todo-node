{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const usersApi = createApi({\n  reducerPath: \"usersApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:5001'\n  }),\n  tagTypes: ['Users', 'Button'],\n  endpoints: builder => ({\n    getUsers: builder.query({\n      query: () => '/',\n      providesTags: ['Users']\n    }),\n    addUser: builder.mutation({\n      query: user => ({\n        url: '/',\n        method: 'POST',\n        body: user\n      }),\n      invalidatesTags: ['Users']\n    }),\n    updateUser: builder.mutation({\n      query: user => ({\n        url: '/',\n        method: 'PUT',\n        body: user\n      }),\n      invalidatesTags: ['Users']\n    }),\n    removeUser: builder.mutation({\n      query: id => ({\n        url: '/',\n        method: 'DELETE',\n        body: id\n      }),\n      invalidatesTags: ['Users']\n    }),\n    getButton: builder.query({\n      query: () => '/',\n      providesTags: ['Users']\n    }),\n    changeButton: builder.mutation({\n      query: user => ({\n        url: '/',\n        method: 'POST',\n        body: user\n      }),\n      invalidatesTags: ['Users']\n    }),\n    getButton: builder.query({\n      query: () => '/button'\n    }),\n    getCurrentUser: builder.query({\n      query: () => '/currentuser'\n    })\n  })\n});\nexport const {\n  useGetUsersQuery,\n  useAddUserMutation,\n  useUpdateUserMutation,\n  useRemoveUserMutation,\n  useGetButtonQuery,\n  useGetCurrentUserQuery\n} = usersApi;\nexport default usersApi.reducer;","map":{"version":3,"names":["createApi","fetchBaseQuery","usersApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getUsers","query","providesTags","addUser","mutation","user","url","method","body","invalidatesTags","updateUser","removeUser","id","getButton","changeButton","getCurrentUser","useGetUsersQuery","useAddUserMutation","useUpdateUserMutation","useRemoveUserMutation","useGetButtonQuery","useGetCurrentUserQuery","reducer"],"sources":["C:/Users/mjaro/Programming/Projects/React/todo/src/redux/slices/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\n\r\n\r\n\r\n\r\nexport const usersApi = createApi({\r\n  reducerPath: \"usersApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5001' }),\r\n  tagTypes: ['Users', 'Button'],\r\n  endpoints: (builder) => ({\r\n    getUsers: builder.query({\r\n      query: () => '/',\r\n      providesTags: ['Users']\r\n    }),\r\n    addUser: builder.mutation({\r\n        query: (user) => ({\r\n            url: '/',\r\n            method: 'POST',\r\n            body: user\r\n        }),\r\n        invalidatesTags: ['Users']     \r\n    }),\r\n    updateUser: builder.mutation({\r\n        query: (user) => ({\r\n            url: '/',\r\n            method: 'PUT',\r\n            body: user\r\n        }),\r\n        invalidatesTags: ['Users']     \r\n    }),\r\n    removeUser: builder.mutation({\r\n        query: (id) => ({\r\n            url: '/',\r\n            method: 'DELETE',\r\n            body: id\r\n        }),\r\n        invalidatesTags: ['Users']     \r\n    }),\r\n    getButton: builder.query({\r\n        query: () => '/',\r\n        providesTags: ['Users']\r\n      }),\r\n    changeButton: builder.mutation({\r\n        query: (user) => ({\r\n            url: '/',\r\n            method: 'POST',\r\n            body: user\r\n        }),\r\n        invalidatesTags: ['Users']     \r\n      }),\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getButton: builder.query({\r\n        query: () => ('/button'),       \r\n    }),\r\n    getCurrentUser: builder.query({\r\n        query: () => ('/currentuser'),\r\n      }),\r\n  }),\r\n});\r\nexport const { useGetUsersQuery, useAddUserMutation, useUpdateUserMutation, useRemoveUserMutation, useGetButtonQuery, useGetCurrentUserQuery } = usersApi\r\nexport default usersApi.reducer\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAMA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAChCG,WAAW,EAAE,UADmB;EAEhCC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAX,CAAD,CAFO;EAGhCC,QAAQ,EAAE,CAAC,OAAD,EAAU,QAAV,CAHsB;EAIhCC,SAAS,EAAGC,OAAD,KAAc;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;MACtBA,KAAK,EAAE,MAAM,GADS;MAEtBC,YAAY,EAAE,CAAC,OAAD;IAFQ,CAAd,CADa;IAKvBC,OAAO,EAAEJ,OAAO,CAACK,QAAR,CAAiB;MACtBH,KAAK,EAAGI,IAAD,KAAW;QACdC,GAAG,EAAE,GADS;QAEdC,MAAM,EAAE,MAFM;QAGdC,IAAI,EAAEH;MAHQ,CAAX,CADe;MAMtBI,eAAe,EAAE,CAAC,OAAD;IANK,CAAjB,CALc;IAavBC,UAAU,EAAEX,OAAO,CAACK,QAAR,CAAiB;MACzBH,KAAK,EAAGI,IAAD,KAAW;QACdC,GAAG,EAAE,GADS;QAEdC,MAAM,EAAE,KAFM;QAGdC,IAAI,EAAEH;MAHQ,CAAX,CADkB;MAMzBI,eAAe,EAAE,CAAC,OAAD;IANQ,CAAjB,CAbW;IAqBvBE,UAAU,EAAEZ,OAAO,CAACK,QAAR,CAAiB;MACzBH,KAAK,EAAGW,EAAD,KAAS;QACZN,GAAG,EAAE,GADO;QAEZC,MAAM,EAAE,QAFI;QAGZC,IAAI,EAAEI;MAHM,CAAT,CADkB;MAMzBH,eAAe,EAAE,CAAC,OAAD;IANQ,CAAjB,CArBW;IA6BvBI,SAAS,EAAEd,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAE,MAAM,GADQ;MAErBC,YAAY,EAAE,CAAC,OAAD;IAFO,CAAd,CA7BY;IAiCvBY,YAAY,EAAEf,OAAO,CAACK,QAAR,CAAiB;MAC3BH,KAAK,EAAGI,IAAD,KAAW;QACdC,GAAG,EAAE,GADS;QAEdC,MAAM,EAAE,MAFM;QAGdC,IAAI,EAAEH;MAHQ,CAAX,CADoB;MAM3BI,eAAe,EAAE,CAAC,OAAD;IANU,CAAjB,CAjCS;IAyDvBI,SAAS,EAAEd,OAAO,CAACE,KAAR,CAAc;MACrBA,KAAK,EAAE,MAAO;IADO,CAAd,CAzDY;IA4DvBc,cAAc,EAAEhB,OAAO,CAACE,KAAR,CAAc;MAC1BA,KAAK,EAAE,MAAO;IADY,CAAd;EA5DO,CAAd;AAJqB,CAAD,CAA1B;AAqEP,OAAO,MAAM;EAAEe,gBAAF;EAAoBC,kBAApB;EAAwCC,qBAAxC;EAA+DC,qBAA/D;EAAsFC,iBAAtF;EAAyGC;AAAzG,IAAoI5B,QAA1I;AACP,eAAeA,QAAQ,CAAC6B,OAAxB"},"metadata":{},"sourceType":"module"}