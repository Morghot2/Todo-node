{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjaro\\\\Programming\\\\Projects\\\\React\\\\todo\\\\src\\\\components\\\\ModifyButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { useDispatch, useSelector } from \"react-redux\";\n// import { changeButtonType, changeModal } from \"../redux/slices/buttonSlice\";\n// import { changeCurrentUser } from \"../redux/slices/currentUserSlice\";\n\nimport { useChangeButtonMutation, useChangeCurrentUserMutation, useGetButtonQuery } from \"../redux/slices/apiSlice\";\nimport Button from \"@mui/material/Button\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModifyButton = _ref => {\n  _s();\n\n  let {\n    action,\n    position\n  } = _ref;\n  //API OPERATIONS\n  const [changeButton] = useChangeButtonMutation();\n  const {\n    data\n  } = useGetButtonQuery();\n  const [changeCurrentUser] = useChangeCurrentUserMutation(); //API OPERATIONS\n  // const dispatch = useDispatch();\n  // const type = useSelector((state) => state.button.show);\n\n  const handleButtonClick = position => {\n    changeButton({\n      show: !data.show,\n      type: action\n    }); // dispatch(changeModal(!type));\n    // dispatch(changeButtonType(action));\n\n    if (position >= 0) {\n      changeCurrentUser({\n        position\n      }); // dispatch(changeCurrentUser(position));\n    }\n  };\n\n  if (action === \"new\") {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleButtonClick,\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (action === \"edit\") {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"warning\",\n      onClick: handleButtonClick,\n      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ModifyButton, \"3SY2rIJs2oR1SwItxvJiergp1Dk=\", false, function () {\n  return [useChangeButtonMutation, useGetButtonQuery, useChangeCurrentUserMutation];\n});\n\n_c = ModifyButton;\nexport default ModifyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyButton\");","map":{"version":3,"names":["React","useChangeButtonMutation","useChangeCurrentUserMutation","useGetButtonQuery","Button","EditIcon","ModifyButton","action","position","changeButton","data","changeCurrentUser","handleButtonClick","show","type"],"sources":["C:/Users/mjaro/Programming/Projects/React/todo/src/components/ModifyButton.js"],"sourcesContent":["import React from \"react\";\r\n\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { changeButtonType, changeModal } from \"../redux/slices/buttonSlice\";\r\n// import { changeCurrentUser } from \"../redux/slices/currentUserSlice\";\r\nimport {\r\n  useChangeButtonMutation,\r\n  useChangeCurrentUserMutation,\r\n  useGetButtonQuery,\r\n} from \"../redux/slices/apiSlice\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nconst ModifyButton = ({ action, position }) => {\r\n  //API OPERATIONS\r\n  const [changeButton] = useChangeButtonMutation();\r\n  const { data } = useGetButtonQuery();\r\n  const [changeCurrentUser] = useChangeCurrentUserMutation();\r\n\r\n  //API OPERATIONS\r\n  // const dispatch = useDispatch();\r\n  // const type = useSelector((state) => state.button.show);\r\n  const handleButtonClick = (position) => {\r\n    changeButton({ show: !data.show, type: action });\r\n    // dispatch(changeModal(!type));\r\n    // dispatch(changeButtonType(action));\r\n    if (position >= 0) {\r\n      \r\n      changeCurrentUser({position});\r\n      \r\n      // dispatch(changeCurrentUser(position));\r\n    }\r\n  };\r\n\r\n  if (action === \"new\") {\r\n    return (\r\n      <Button variant=\"contained\" onClick={handleButtonClick}>\r\n        New\r\n      </Button>\r\n    );\r\n  }\r\n  if (action === \"edit\") {\r\n    return (\r\n      <Button variant=\"contained\" color=\"warning\" onClick={handleButtonClick}>\r\n        <EditIcon />\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ModifyButton;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,SACEC,uBADF,EAEEC,4BAFF,EAGEC,iBAHF,QAIO,0BAJP;AAMA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,YAAY,GAAG,QAA0B;EAAA;;EAAA,IAAzB;IAAEC,MAAF;IAAUC;EAAV,CAAyB;EAC7C;EACA,MAAM,CAACC,YAAD,IAAiBR,uBAAuB,EAA9C;EACA,MAAM;IAAES;EAAF,IAAWP,iBAAiB,EAAlC;EACA,MAAM,CAACQ,iBAAD,IAAsBT,4BAA4B,EAAxD,CAJ6C,CAM7C;EACA;EACA;;EACA,MAAMU,iBAAiB,GAAIJ,QAAD,IAAc;IACtCC,YAAY,CAAC;MAAEI,IAAI,EAAE,CAACH,IAAI,CAACG,IAAd;MAAoBC,IAAI,EAAEP;IAA1B,CAAD,CAAZ,CADsC,CAEtC;IACA;;IACA,IAAIC,QAAQ,IAAI,CAAhB,EAAmB;MAEjBG,iBAAiB,CAAC;QAACH;MAAD,CAAD,CAAjB,CAFiB,CAIjB;IACD;EACF,CAVD;;EAYA,IAAID,MAAM,KAAK,KAAf,EAAsB;IACpB,oBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,OAAO,EAAEK,iBAArC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAIL,MAAM,KAAK,MAAf,EAAuB;IACrB,oBACE,QAAC,MAAD;MAAQ,OAAO,EAAC,WAAhB;MAA4B,KAAK,EAAC,SAAlC;MAA4C,OAAO,EAAEK,iBAArD;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;AACF,CAnCD;;GAAMN,Y;UAEmBL,uB,EACNE,iB,EACWD,4B;;;KAJxBI,Y;AAqCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}